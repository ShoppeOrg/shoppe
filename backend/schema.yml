openapi: 3.0.3
info:
  title: Shoppe API
  version: 1.0.0
  description: This is full descriptive documentation of Shoppe API written on Django
    and Django Rest Framework
paths:
  /articles/:
    get:
      operationId: articles_list
      parameters:
      - in: query
        name: categories
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: is_published
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - articles
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticleList'
          description: ''
    post:
      operationId: articles_create
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleCreate'
          description: ''
  /articles/{slug}/:
    get:
      operationId: articles_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: A unique value identifying this article.
        required: true
      tags:
      - articles
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDetail'
          description: ''
  /articles/{id}/publish/:
    post:
      operationId: articles_publish_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - articles
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /articles/categories/:
    get:
      operationId: articles_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - articles
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticleCategoryList'
          description: ''
    post:
      operationId: articles_categories_create
      tags:
      - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArticleCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArticleCategory'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleCategory'
          description: ''
  /auth/email/:
    post:
      operationId: auth_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAuth'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAuth'
          description: ''
  /auth/mobile/:
    post:
      operationId: auth_mobile_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobileAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobileAuth'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileAuth'
          description: ''
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        This is a duplicate of rest_framework's own ObtainAuthToken method.
        Instead, this returns an Auth Token based on our callback token and source.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenAuth'
          description: ''
  /auth/verify/:
    post:
      operationId: auth_verify_create
      description: |-
        This verifies an alias on correct callback token entry using the same logic as auth.
        Should be refactored at some point.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenVerification'
          description: ''
  /auth/verify/email/:
    post:
      operationId: auth_verify_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/verify/mobile/:
    post:
      operationId: auth_verify_mobile_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /images/upload/:
    post:
      operationId: images_upload_create
      tags:
      - images
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Picture'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Picture'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picture'
          description: ''
  /products/:
    get:
      operationId: products_list
      parameters:
      - in: query
        name: in_stock
        schema:
          type: boolean
      - in: query
        name: max_price
        schema:
          type: number
      - in: query
        name: min_price
        schema:
          type: number
      - in: query
        name: order_by
        schema:
          type: array
          items:
            type: string
            enum:
            - popular.desc
            - price.asc
            - price.desc
            - recent.desc
        description: |-
          Ordering

          * `popular.desc` - by Popularity (DESC)
          * `price.asc` - by Price
          * `price.desc` - by Price (DESC)
          * `recent.desc` - by Recent added
        explode: false
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCreate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /products/{product}/inventory/:
    get:
      operationId: products_inventory_retrieve
      parameters:
      - in: path
        name: product
        schema:
          type: integer
        description: A unique value identifying this product inventory.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInventory'
          description: ''
    put:
      operationId: products_inventory_update
      parameters:
      - in: path
        name: product
        schema:
          type: integer
        description: A unique value identifying this product inventory.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductInventory'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInventory'
          description: ''
    patch:
      operationId: products_inventory_partial_update
      parameters:
      - in: path
        name: product
        schema:
          type: integer
        description: A unique value identifying this product inventory.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductInventory'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInventory'
          description: ''
  /products/reviews/:
    get:
      operationId: products_reviews_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - products
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewListList'
          description: ''
    post:
      operationId: products_reviews_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /products/reviews/{id}/publish:
    post:
      operationId: products_reviews_publish_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewPublish'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewPublish'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewPublish'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewPublish'
          description: ''
components:
  schemas:
    Article:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        title:
          type: string
          maxLength: 255
        author_fullname:
          type: string
          readOnly: true
        author_username:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            type: string
          readOnly: true
        published_at:
          type: string
          format: date-time
          nullable: true
      required:
      - author_fullname
      - author_username
      - categories
      - title
      - url
    ArticleCategory:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
      required:
      - name
    ArticleCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 260
        categories:
          type: array
          items:
            type: string
        author:
          type: integer
        data:
          type: string
        is_published:
          type: boolean
        scheduled_at:
          type: string
          format: date-time
          nullable: true
      required:
      - author
      - categories
      - slug
      - title
    ArticleDetail:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        author_fullname:
          type: string
          readOnly: true
        author_username:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            type: string
        data:
          type: string
        published_at:
          type: string
          format: date-time
          nullable: true
      required:
      - author_fullname
      - author_username
      - categories
      - title
    CallbackTokenAuth:
      type: object
      description: |-
        Abstract class inspired by DRF's own token serializer.
        Returns a user if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    CallbackTokenVerification:
      type: object
      description: |-
        Takes a user and a token, verifies the token belongs to the user and
        validates the alias that the token was sent from.
      properties:
        email:
          type: string
          format: email
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    EmailAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    MobileAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
      required:
      - mobile
    PaginatedArticleCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArticleCategory'
    PaginatedArticleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Article'
    PaginatedProductListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
    PaginatedReviewListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewList'
    PatchedProductCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        in_stock:
          type: string
          readOnly: true
        main_image:
          type: integer
          nullable: true
        images:
          type: array
          items:
            type: integer
        description:
          type: string
    PatchedProductInventory:
      type: object
      properties:
        product_id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          minimum: 0
        sold_qty:
          type: integer
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    Picture:
      type: object
      properties:
        title:
          type: string
          maxLength: 150
        picture:
          type: string
          format: uri
          pattern: (?:jpg|png)$
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - picture
      - uploaded_at
    ProductCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        in_stock:
          type: string
          readOnly: true
        main_image:
          type: integer
          nullable: true
        images:
          type: array
          items:
            type: integer
        description:
          type: string
      required:
      - id
      - images
      - in_stock
      - main_image
      - name
      - quantity
    ProductDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          readOnly: true
        in_stock:
          type: string
          readOnly: true
        main_image:
          type: string
          readOnly: true
        images:
          type: array
          items:
            type: string
          readOnly: true
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
          readOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - images
      - in_stock
      - main_image
      - name
      - quantity
      - reviews
      - updated_at
    ProductInventory:
      type: object
      properties:
        product_id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          minimum: 0
        sold_qty:
          type: integer
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - product_id
      - updated_at
    ProductList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        main_image:
          type: string
          readOnly: true
        in_stock:
          type: string
          readOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - in_stock
      - main_image
      - name
      - quantity
      - updated_at
      - url
    Review:
      type: object
      properties:
        username:
          type: string
          readOnly: true
        product:
          type: integer
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
          maxLength: 400
        is_published:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - created_at
      - is_published
      - product
      - rating
      - username
    ReviewList:
      type: object
      properties:
        user:
          type: integer
        product:
          type: integer
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
          maxLength: 400
        is_published:
          type: boolean
        published_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - created_at
      - product
      - rating
      - user
    ReviewPublish:
      type: object
      properties:
        is_published:
          type: boolean
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
